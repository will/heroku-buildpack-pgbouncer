#!/usr/bin/env bash
# Adapted from https://github.com/ryandotsmith/nginx-buildpack/

DATABASE_URL=$PGBOUNCER_URI
QC_DATABASE_URL=$QC_PGBOUNCER_URI

psmgr=/tmp/pgbouncer-buildpack-wait
rm -f $psmgr
mkfifo $psmgr

#Start App Server
(
	#Take the command passed to this bin and start it.
	#E.g. bin/start-pgbouncer-stunnel bundle exec unicorn -c config/unicorn.rb
	exec $@ &
	echo "buildpack=pgbouncer at=start-app cmd=$@"
	wait
	echo 'app' >$psmgr
) &

#Start stunnel
(
	#We expect stunnel to run in the foreground.
	echo 'buildpack=pgbouncer at=stunnel-start'
	vendor/stunnel/bin/stunnel vendor/stunnel/stunnel-pgbouncer.conf
	echo 'stunnel' >$psmgr
) &

#Start PGBouncer
(
	#We expect pgbouncer to run in the foreground.
	echo 'buildpack=pgbouncer at=pgbouncer-start'
	vendor/pgbouncer/bin/pgbouncer vendor/pgbouncer/pgbouncer.ini
	echo 'pgbouncer' >$psmgr
) &

#This read will block the process waiting on a msg to be put into the fifo.
#If any of the processes defined above should exit,
#a msg will be put into the fifo causing the read operation
#to un-block. The process putting the msg into the fifo
#will use it's process name as a msg so that we can print the offending
#process to stdout.
read exit_process <$psmgr
echo "buildpack=pgbouncer at=exit process=$exit_process"
exit 1
